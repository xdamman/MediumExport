])}while(1);</x>{"success":true,"payload":{"value":{"id":"fcd5dd43ac86","versionId":"ca46de7ec4a0","creatorId":"3dc96d2e1770","homeCollectionId":"ed509b152402","title":"Going Serverless, without serverless.","detectedLanguage":"en","latestVersion":"ca46de7ec4a0","latestPublishedVersion":"ca46de7ec4a0","hasUnpublishedEdits":false,"latestRev":752,"createdAt":1535713656392,"updatedAt":1535720084980,"acceptedAt":0,"firstPublishedAt":1535720084256,"latestPublishedAt":1535720084256,"vote":false,"experimentalCss":"","displayAuthor":"","content":{"subtitle":"Automated deployment of serverless functions with Cloud Build","bodyModel":{"paragraphs":[{"name":"99b4","type":3,"text":"Going Serverless, without serverless.","markups":[]},{"name":"b973","type":13,"text":"Automated deployment of serverless functions with Cloud Build","markups":[]},{"name":"bf39","type":4,"text":"Umbrellas in Zhytomyr","markups":[],"layout":5,"metadata":{"id":"1*xd4FW5uMu9yq0F9rXsj57A.jpeg","originalWidth":1280,"originalHeight":720}},{"name":"a71c","type":1,"text":"Earlier this year we wrote about how to automagically tag and release serverless functions and how to automate your sales channels with serverless functions. Since then we iterated over our automation and release processes and managed to add node8 support into the serverless framework as well. But that’s not enough. The serverless framework is great with Amazon Lambda, but even though Google Cloud Functions are supported, functionality is very basic. The challenge we faced was deployment on two different projects.","markups":[{"type":3,"start":40,"end":90,"href":"https://medium.com/heneise/serverless-v2-0-0-f5ed17fac386","title":"","rel":"","anchorType":0},{"type":3,"start":102,"end":156,"href":"https://medium.com/heneise/serverless-sales-automation-af7eb1f5cd2","title":"","rel":"","anchorType":0},{"type":3,"start":238,"end":255,"href":"https://github.com/serverless/serverless-google-cloudfunctions/pull/114","title":"","rel":"","anchorType":0},{"type":3,"start":322,"end":342,"href":"https://serverless.com","title":"","rel":"","anchorType":0}]},{"name":"ec35","type":1,"text":"On Google Cloud, the best way to deal with a staging and production environment is to create two different projects. We created a staging project in Europe (closer to the development team) and have production set up in the US (closer to customers) — win win, everyone gets the best user experience.","markups":[]},{"name":"e3c0","type":1,"text":"With serverless on AWS this is very simple to do. With serverless on Google Cloud, impossible. Since only one config file is supported. We’ve tried a few approaches but in the end decided to ditch serverless and work with Google Cloud features directly. Initially we thought this would mean a lot of work to migrate everything, but it was a lot easier than expected.","markups":[]},{"name":"fbff","type":13,"text":"Requirements & Setup","markups":[]},{"name":"3d1e","type":1,"text":"To set up fully automated, semantic deployment on several projects with Google Cloud, you need three things:","markups":[]},{"name":"af2a","type":10,"text":"Separate Google Cloud projects (ie project-dev and project-app)","markups":[{"type":10,"start":35,"end":46},{"type":10,"start":51,"end":62}]},{"name":"26d1","type":10,"text":"Travis-CI Pro","markups":[]},{"name":"cad1","type":10,"text":"Google Cloud Build","markups":[]},{"name":"51cc","type":1,"text":"You can use a similar setup with semantic-release as mentioned earlier in our serverless 2.0 article, with a few changes. As a pre-requisite, we expect you have semantic-release running and Travis-CI set up and working. From your travis.yml remove the deploy scripts. Travis now is only responsible for continuous testing and to tag the release on GitHub (= faster build).","markups":[{"type":10,"start":230,"end":240},{"type":10,"start":252,"end":258},{"type":3,"start":33,"end":49,"href":"https://github.com/semantic-release/semantic-release","title":"","rel":"","anchorType":0},{"type":3,"start":190,"end":199,"href":"https://travis-ci.com","title":"","rel":"","anchorType":0}]},{"name":"9d76","type":13,"text":"Source Repositories","markups":[]},{"name":"e4dd","type":1,"text":"First of all, you should mirror your (GitHub) repositories into Google Cloud. Activate the Source Repositories API in your project and head to Source Repositories. You can authenticate with GitHub and mirror the repository with the same name here. Serverless usually compresses and uploads the folders to Cloud Storage, then deploys them to the function, this step is not required when using Source Repositories, since the function can deploy straight from there.","markups":[{"type":3,"start":143,"end":162,"href":"https://console.cloud.google.com/code/develop/repo","title":"","rel":"","anchorType":0}]},{"name":"c183","type":13,"text":"Cloud Build & Triggers","markups":[]},{"name":"6730","type":1,"text":"Once you have the repo mirrored, activate the Cloud Build API in the project and head to Cloud Build. You will find a second tab “Triggers” where you can configure automated build triggers. If you have semantic-release running on Travis and everything works, you should select changes on “tags” as build trigger:","markups":[{"type":3,"start":89,"end":100,"href":"https://console.cloud.google.com/cloud-build/builds","title":"","rel":"","anchorType":0},{"type":3,"start":130,"end":138,"href":"https://console.cloud.google.com/cloud-build/triggers","title":"","rel":"","anchorType":0}]},{"name":"b456","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"1*CCl8Z-bkpfkfepaUPW6IFQ.png","originalWidth":944,"originalHeight":1286}},{"name":"418d","type":1,"text":"Once saved, every tag/release on GitHub will trigger the build process. This will fail, since you don’t have the build steps defined yet. I’ll get to the Substitution variables in a bit.","markups":[]},{"name":"1f9c","type":1,"text":"First, if you have used the serverless framework before, remove the .serverless folder and serverless.yml file. For different environments, we have different environment variable files. It’s not the most elegant solution, if you have suggestions on how to improve that, please let us know!","markups":[{"type":10,"start":68,"end":79},{"type":10,"start":91,"end":105}]},{"name":"754e","type":1,"text":"At the moment, we create production releases manually and tag them -live to trigger releases on the production project. We’re looking forward to the next semantic-release with multi-branch and multi-channel.","markups":[{"type":10,"start":67,"end":72},{"type":3,"start":154,"end":206,"href":"https://github.com/semantic-release/semantic-release/issues/563","title":"","rel":"","anchorType":0}]},{"name":"a182","type":13,"text":"Key Management System (KMS)","markups":[]},{"name":"05f5","type":1,"text":"We use Cloud Key Management System (KMS) to encrypt both staging and production environment files. Head over to Cryptographic Keys to add a new Key Ring and Key. Then you can add this snippet to your Makefile to encrypt the file safely. Here’s an example for .staging.yaml and Makefile. All environment variables should be on your .gitignore. Don’t commit them to the repo.","markups":[{"type":10,"start":200,"end":208},{"type":10,"start":259,"end":272},{"type":10,"start":277,"end":285},{"type":10,"start":331,"end":341},{"type":3,"start":112,"end":130,"href":"https://console.cloud.google.com/security/kms","title":"","rel":"noopener","anchorType":0}]},{"name":"1ef2","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"756af1a8de047f9430dd50c7c5750687","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F74390%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"31f4","type":1,"text":"Last, you need the cloudbuild.yml file to put everything together","markups":[{"type":10,"start":19,"end":33}]},{"name":"c420","type":13,"text":"Cloud Build Steps","markups":[]},{"name":"bcb7","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"6a10a0d626a7e02b28c257dfb71066c1","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F74390%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"73ae","type":1,"text":"The first step is to decrypt the environment files and save them for the build. Variables are visible on Cloud Functions and in the build, here’s where access control to the project is important. Developers have access to staging, but not production.","markups":[]},{"name":"e16a","type":1,"text":"The first step also has an id. This is a neat little trick which isn’t all that obvious in the docs, hidden in “Step Order”. In the second step we use waitFor: [\"decrypt\"], we wait for the first step to complete and then run everything else. All further steps also just wait for decrypt, means we can deploy all functions in parallel, once the variables are there. We managed to get our builds down to 2–3 minutes, from initial >15 mins, before we found concurrent builds.","markups":[{"type":10,"start":27,"end":29},{"type":10,"start":151,"end":171},{"type":10,"start":279,"end":286},{"type":3,"start":112,"end":122,"href":"https://cloud.google.com/cloud-build/docs/configuring-builds/configure-build-step-order","title":"","rel":"","anchorType":0}]},{"name":"8d7e","type":1,"text":"In the step to deploy the function, we use --env-vars-file to specify the environment file. ${_MEM} and ${_REGION} help us to control the memory and region requirements for each build, we use 128Mb and europe-west1 for staging, 256Mb and us-central1 for production, configured in the Build Trigger.","markups":[{"type":10,"start":43,"end":58},{"type":10,"start":92,"end":99},{"type":10,"start":104,"end":114},{"type":10,"start":202,"end":214},{"type":10,"start":238,"end":249}]},{"name":"e690","type":1,"text":"Once you have the cloudbuild.yaml added to the repo, your function should already automatically to Google Cloud Functions.","markups":[{"type":10,"start":18,"end":33},{"type":3,"start":99,"end":121,"href":"https://console.cloud.google.com/functions/list","title":"","rel":"","anchorType":0}]},{"name":"fdc5","type":13,"text":"Summary","markups":[]},{"name":"7dab","type":1,"text":"We group functions based on business purpose or logic. For example, we have all image-related functions in a repo images. With 5–6 functions per build, we averaged at 10 minutes deployment time with Travis and Serverless. If a deployment failed for some reason, we had to run CI and CD again. Moving continuous deployment to Cloud Build, our tests run within 2m30s, semantic-release barely takes time to create the release on GitHub and our Cloud Trigger picks up immediately and starts building. With parallel builds we have an average build time of 2–3 minutes. This means we don’t save too much time with the deployment in total, but we build & deploy directly on Google, which means we don’t need keyfiles any longer and don’t need to worry on how we manage multiple keyfiles for multiple environments. We’re still investigating in better ways on how to handle the environment files, but for now we’re quite happy with the setup.","markups":[{"type":10,"start":114,"end":120}]},{"name":"4e51","type":3,"text":"Work With Us","markups":[]},{"name":"9f85","type":1,"text":"We’re always open for new exciting projects. If you are looking for a team of passionate engineers, feel free to reach out: hello@heneise.co.","markups":[{"type":3,"start":124,"end":140,"href":"mailto:hello@heneise.co","title":"","rel":"","anchorType":0}]},{"name":"2a11","type":1,"text":"With ❤️ From 🌍","markups":[]}],"sections":[{"name":"3fad","startIndex":0}]},"postDisplay":{"coverless":true}},"virtuals":{"statusForCollection":"APPROVED","allowNotes":true,"previewImage":{"imageId":"1*xd4FW5uMu9yq0F9rXsj57A.jpeg","filter":"","backgroundSize":"","originalWidth":1280,"originalHeight":720,"strategy":"resample","height":0,"width":0},"wordCount":1017,"imageCount":2,"readingTime":4.221069182389937,"subtitle":"Automated deployment of serverless functions with Cloud Build","publishedInCount":1,"usersBySocialRecommends":[],"noIndex":false,"recommends":1,"isBookmarked":false,"tags":[{"slug":"google-cloud-platform","name":"Google Cloud Platform","postCount":4617,"metadata":{"postCount":4617,"coverImage":{"id":"1*trNhoe9XVKt2IrSy4JbIkQ.jpeg","originalWidth":4048,"originalHeight":3036,"isFeatured":true}},"type":"Tag"},{"slug":"serverless","name":"Serverless","postCount":4500,"metadata":{"postCount":4500,"coverImage":{"id":"1*3IfP76Fp_LE-6qLPhfQsMA.png","originalWidth":1689,"originalHeight":983,"isFeatured":true}},"type":"Tag"},{"slug":"continous-deployment","name":"Continous Deployment","postCount":67,"metadata":{"postCount":67,"coverImage":{"id":"1*pOq8yX3TmoRhBTDQXPUS6g.png","originalWidth":1080,"originalHeight":415,"isFeatured":true}},"type":"Tag"},{"slug":"cloud-computing","name":"Cloud Computing","postCount":23302,"metadata":{"postCount":23302,"coverImage":{"id":"1*BU46LufhEIhxIt_BUyPaRQ.jpeg","originalWidth":1000,"originalHeight":504,"isFeatured":true}},"type":"Tag"},{"slug":"nodejs","name":"Nodejs","postCount":16432,"metadata":{"postCount":16432,"coverImage":{"id":"1*yW34BLeoeWa_qBgoUn6-VA.jpeg","originalWidth":1000,"originalHeight":500,"isFeatured":true}},"type":"Tag"}],"socialRecommendsCount":0,"responsesCreatedCount":0,"links":{"entries":[{"url":"mailto:hello@heneise.co","alts":[],"httpStatus":0},{"url":"https://travis-ci.com","alts":[],"httpStatus":200},{"url":"https://console.cloud.google.com/cloud-build/builds","alts":[],"httpStatus":200},{"url":"https://console.cloud.google.com/security/kms","alts":[],"httpStatus":200},{"url":"https://console.cloud.google.com/functions/list","alts":[],"httpStatus":200},{"url":"https://console.cloud.google.com/code/develop/repo","alts":[],"httpStatus":200},{"url":"https://console.cloud.google.com/cloud-build/triggers","alts":[],"httpStatus":200},{"url":"https://cloud.google.com/cloud-build/docs/configuring-builds/configure-build-step-order","alts":[],"httpStatus":200},{"url":"https://github.com/semantic-release/semantic-release","alts":[],"httpStatus":200},{"url":"https://serverless.com","alts":[],"httpStatus":200},{"url":"https://medium.com/heneise/serverless-sales-automation-af7eb1f5cd2","alts":[{"type":3,"url":"medium://p/af7eb1f5cd2"},{"type":2,"url":"medium://p/af7eb1f5cd2"}],"httpStatus":200},{"url":"https://medium.com/heneise/serverless-v2-0-0-f5ed17fac386","alts":[{"type":2,"url":"medium://p/f5ed17fac386"},{"type":3,"url":"medium://p/f5ed17fac386"}],"httpStatus":200},{"url":"https://github.com/semantic-release/semantic-release/issues/563","alts":[],"httpStatus":200},{"url":"https://github.com/serverless/serverless-google-cloudfunctions/pull/114","alts":[],"httpStatus":200}],"version":"0.3","generatedAt":1535720085946},"isLockedPreviewOnly":false,"takeoverId":"","metaDescription":"","totalClapCount":1,"sectionCount":1,"readingList":0,"topics":[]},"coverless":true,"slug":"going-serverless-without-serverless","translationSourcePostId":"","translationSourceCreatorId":"","isApprovedTranslation":false,"inResponseToPostId":"","inResponseToRemovedAt":0,"isTitleSynthesized":true,"allowResponses":true,"importedUrl":"","importedPublishedAt":0,"visibility":0,"uniqueSlug":"going-serverless-without-serverless-fcd5dd43ac86","previewContent":{"bodyModel":{"paragraphs":[{"name":"99b4","type":3,"text":"Going Serverless, without serverless.","markups":[],"alignment":1},{"name":"b973","type":13,"text":"Automated deployment of serverless functions with Cloud Build","markups":[],"alignment":1},{"name":"bf39","type":4,"text":"","markups":[],"layout":10,"metadata":{"id":"1*xd4FW5uMu9yq0F9rXsj57A.jpeg","originalWidth":1280,"originalHeight":720}}],"sections":[{"startIndex":0}]},"isFullContent":false,"subtitle":"Automated deployment of serverless functions with Cloud Build"},"license":0,"inResponseToMediaResourceId":"","canonicalUrl":"https://medium.com/heneise/going-serverless-without-serverless-fcd5dd43ac86","approvedHomeCollectionId":"ed509b152402","newsletterId":"","webCanonicalUrl":"https://medium.com/heneise/going-serverless-without-serverless-fcd5dd43ac86","mediumUrl":"https://medium.com/heneise/going-serverless-without-serverless-fcd5dd43ac86","migrationId":"","notifyFollowers":true,"notifyTwitter":false,"notifyFacebook":false,"responseHiddenOnParentPostAt":0,"isSeries":false,"isSubscriptionLocked":false,"seriesLastAppendedAt":0,"audioVersionDurationSec":0,"sequenceId":"","isNsfw":false,"isEligibleForRevenue":false,"isBlockedFromHightower":false,"deletedAt":0,"lockedPostSource":0,"hightowerMinimumGuaranteeStartsAt":0,"hightowerMinimumGuaranteeEndsAt":0,"featureLockRequestAcceptedAt":0,"mongerRequestType":1,"layerCake":0,"socialTitle":"","socialDek":"","editorialPreviewTitle":"","editorialPreviewDek":"","curationEligibleAt":0,"type":"Post"},"mentionedUsers":[],"collaborators":[],"collectionUserRelations":[],"mode":null,"references":{"User":{"3dc96d2e1770":{"userId":"3dc96d2e1770","name":"Patrick Heneise","username":"PatrickHeneise","createdAt":1499179834355,"imageId":"1*Qbv2ovJlQm2muHiyu_ujQg.jpeg","backgroundImageId":"","bio":"Software Engineer, minimalist and nomad.","twitterScreenName":"PatrickHeneise","socialStats":{"userId":"3dc96d2e1770","usersFollowedCount":40,"usersFollowedByCount":69,"type":"SocialStats"},"social":{"userId":"lo_2844436ad3ae","targetUserId":"3dc96d2e1770","type":"Social"},"facebookAccountId":"","allowNotes":1,"mediumMemberAt":0,"isNsfw":false,"type":"User"}},"Collection":{"ed509b152402":{"id":"ed509b152402","name":"heneise","slug":"heneise","tags":["JAVASCRIPT","NODEJS","TECHNOLOGY","SOFTWARE ENGINEERING","SOFTWARE ARCHITECTURE"],"creatorId":"3dc96d2e1770","description":"Heneise Consulting","shortDescription":"Heneise Consulting","image":{"imageId":"1*2_dz_2ql9rjPDZfRSXxmvg.png","filter":"","backgroundSize":"","originalWidth":500,"originalHeight":500,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":13,"activeAt":1535720084933},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false,"canEnrollInHightower":false,"canLockPostsForMediumMembers":false,"canLockOwnPostsForMediumMembers":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":"","isEnrolledInHightower":false,"isEligibleForHightower":false},"logo":{"imageId":"1*NDukw8f8rxWr3goMptyTwQ.png","filter":"","backgroundSize":"","originalWidth":498,"originalHeight":233,"strategy":"resample","height":0,"width":0},"twitterUsername":"heneise","publicEmail":"info@heneise.consulting","sections":[{"type":2,"collectionHeaderMetadata":{"backgroundImage":{},"logoImage":{"id":"1*NDukw8f8rxWr3goMptyTwQ@2x.png","originalWidth":498,"originalHeight":233,"alt":"heneise"},"alignment":1,"layout":6}},{"type":1,"postListMetadata":{"source":1,"layout":3,"number":7,"postIds":[]}}],"favicon":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF02B875","point":0},{"color":"#FF00AB6B","point":0.1},{"color":"#FF1C9963","point":0.2},{"color":"#FF092E20","point":1}],"backgroundColor":"#FFFFFFFF"},"highlightSpectrum":{"colorPoints":[{"color":"#FFFFFFFF","point":0},{"color":"#FFE9FDF0","point":0.1},{"color":"#FFE2FAEE","point":0.2},{"color":"#FFADFFCF","point":0.6},{"color":"#FF7DFFB3","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[],"colorBehavior":1,"instantArticlesState":0,"acceleratedMobilePagesState":0,"ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"header":{"backgroundImage":{},"logoImage":{"id":"1*NDukw8f8rxWr3goMptyTwQ@2x.png","originalWidth":498,"originalHeight":233,"alt":"heneise"},"alignment":1,"layout":6},"type":"Collection"}},"Social":{"3dc96d2e1770":{"userId":"lo_2844436ad3ae","targetUserId":"3dc96d2e1770","type":"Social"}},"SocialStats":{"3dc96d2e1770":{"userId":"3dc96d2e1770","usersFollowedCount":40,"usersFollowedByCount":69,"type":"SocialStats"}}}},"v":3,"b":"36401-8a724cf"}
